[
  {
    "objectID": "Practical1.html",
    "href": "Practical1.html",
    "title": "Practical1",
    "section": "",
    "text": "This initial analysis in conducted on the airquality dataset, a heading of which is visible below:\n\n\n   Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\nRows with missing values\n\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\nSummary Statistics\n\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\nSimple Linear Regression\nFirst principles\n\nX &lt;-  matrix(data = cbind(rep(1, 50) ,cars$speed), nrow = 50, ncol = 2)\nY &lt;-  cars$dist\n\n\n\n#Function that takes response and predictor data frames, estimates the regression parameters under ordinary least squares estiamtion and outputs the results in a list \nModelMaker &lt;- function(X,Y){\n  \n    #Model coefficient estimates\n    betas = (solve(t(X)%*%X))%*%(t(X)%*%Y)\n    fitted &lt;- X%*%betas #fitted values\n    \n    #Standard errors\n    cov &lt;- solve(t(X)%*%X) #covariance matrix\n    SSE &lt;- sum((Y-fitted)**2) #error sum of squares\n    n &lt;-  length(Y)\n    s &lt;-  sqrt(SSE/(n-2)) #residual standard error\n    se1 &lt;- s*sqrt(cov[1]) #standard errors\n    se2 &lt;- s*sqrt(cov[4])\n    \n    #t-values\n    t1 &lt;- betas[1]/se1\n    t2 &lt;- betas[2]/se2\n    \n    #p-values\n    p1 &lt;- 2*pt(q = t1, df = n-2, lower.tail = TRUE)\n    p2 &lt;- 2*pt(q = t2, df = n-2, lower.tail = FALSE)\n    \n    return(list(coefficients = round(betas,4), Std.Error = c(round(se1,4),round(se2,4)),     tvalue = c(round(t1,4),round(t2,4)), p = c(round(p1,4),round(p2,4))))\n\n}\n\nModelMaker(X,Y)\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\nThe estimates found via first principles are -17.57905 for the intercept coefficient and 3.932409 for the slope coefficient.\nUsing the lm package, the generated model is:\n\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\nWe will now test to see if the lm function agrees with our first principal results\n\n#Model coefficient differences\nround(summary(mod)[[\"coefficients\"]][, \"Estimate\"],4) == ModelMaker(X,Y)$coefficients\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\nround(summary(mod)[[\"coefficients\"]][, \"Std. Error\"],4) == ModelMaker(X,Y)$Std.Error\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"t value\"],4) == ModelMaker(X,Y)$tvalue\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"Pr(&gt;|t|)\"],4) == ModelMaker(X,Y)$p\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\nSince the differences between the appropriate estimates are negligible, we conclude that thge lm model agrees with the first principal calculations."
  },
  {
    "objectID": "Source code.html",
    "href": "Source code.html",
    "title": "Source Code",
    "section": "",
    "text": "Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\n(Intercept)          X2 \n       TRUE        TRUE"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hand-in 1",
    "section": "",
    "text": "# Practicals {.tabset}\n\n\nThis initial analysis in conducted on the airquality dataset, a heading of which is visible below:\n\n\n   Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\nRows with missing values\n\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\nSummary Statistics\n\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\nSimple Linear Regression\nFirst principles\n\nX &lt;-  matrix(data = cbind(rep(1, 50) ,cars$speed), nrow = 50, ncol = 2)\nY &lt;-  cars$dist\n\n\n\n#Function that takes response and predictor data frames, estimates the regression parameters under ordinary least squares estiamtion and outputs the results in a list \nModelMaker &lt;- function(X,Y){\n  \n    #Model coefficient estimates\n    betas = (solve(t(X)%*%X))%*%(t(X)%*%Y)\n    fitted &lt;- X%*%betas #fitted values\n    \n    #Standard errors\n    cov &lt;- solve(t(X)%*%X) #covariance matrix\n    SSE &lt;- sum((Y-fitted)**2) #error sum of squares\n    n &lt;-  length(Y)\n    s &lt;-  sqrt(SSE/(n-2)) #residual standard error\n    se1 &lt;- s*sqrt(cov[1]) #standard errors\n    se2 &lt;- s*sqrt(cov[4])\n    \n    #t-values\n    t1 &lt;- betas[1]/se1\n    t2 &lt;- betas[2]/se2\n    \n    #p-values\n    p1 &lt;- 2*pt(q = t1, df = n-2, lower.tail = TRUE)\n    p2 &lt;- 2*pt(q = t2, df = n-2, lower.tail = FALSE)\n    \n    return(list(coefficients = round(betas,4), Std.Error = c(round(se1,4),round(se2,4)),     tvalue = c(round(t1,4),round(t2,4)), p = c(round(p1,4),round(p2,4))))\n\n}\n\nModelMaker(X,Y)\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\nThe estimates found via first principles are -17.57905 for the intercept coefficient and 3.932409 for the slope coefficient.\nUsing the lm package, the generated model is:\n\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\nWe will now test to see if the lm function agrees with our first principal results\n\n#Model coefficient differences\nround(summary(mod)[[\"coefficients\"]][, \"Estimate\"],4) == ModelMaker(X,Y)$coefficients\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\nround(summary(mod)[[\"coefficients\"]][, \"Std. Error\"],4) == ModelMaker(X,Y)$Std.Error\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"t value\"],4) == ModelMaker(X,Y)$tvalue\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"Pr(&gt;|t|)\"],4) == ModelMaker(X,Y)$p\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\nSince the differences between the appropriate estimates are negligible, we conclude that thge lm model agrees with the first principal calculations.\n\n\n\n\nset.seed(1)\n\nX &lt;- seq(1,100)\ne &lt;- rnorm(100, 0, (0.2)**2)\nY &lt;- sin(X/10) + e\n\ncustom_lowess &lt;- function(x,y,f){\n  \n  n &lt;- length(y)\n  x &lt;- matrix(data = cbind(rep(1,n), x), nrow = n , ncol = 2)\n  k &lt;- floor(f*n)\n  w &lt;- rep(NA, n)\n  yhat &lt;- rep(NA,n)\n  \n  for(i in 1:n)\n    {\n    dists &lt;- abs(rep(x[i,2],n) - x[,2])\n    dmax &lt;- sort(dists)[k]\n  \n    \n    for(j in 1:n){\n      if((abs(x[j,2] - x[i,2]) &gt; dmax)){\n        w[j] &lt;- 0\n      }\n      else{\n        w[j] &lt;- (1 - (abs(x[j,2]-x[i,2])/dmax)**3)**3\n      }\n    }\n  \n  \n   W &lt;- diag(x = w, nrow = n, ncol = n)\n   Beta &lt;- solve(t(x)%*%W%*%x)%*%t(x)%*%W%*%y\n   yhat[i] &lt;- Beta[1] + Beta[2]*x[i,2]\n  }\n  return(yhat)\n}\n\nround(custom_lowess(X,Y,0.5),5) == round(lowess(X,Y,f = 0.5, iter = 0)$y, 5)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "index.html#practical-2",
    "href": "index.html#practical-2",
    "title": "Hand-in 1",
    "section": "",
    "text": "set.seed(1)\n\nX &lt;- seq(1,100)\ne &lt;- rnorm(100, 0, (0.2)**2)\nY &lt;- sin(X/10) + e\n\ncustom_lowess &lt;- function(x,y,f){\n  \n  n &lt;- length(y)\n  x &lt;- matrix(data = cbind(rep(1,n), x), nrow = n , ncol = 2)\n  k &lt;- floor(f*n)\n  w &lt;- rep(NA, n)\n  yhat &lt;- rep(NA,n)\n  \n  for(i in 1:n)\n    {\n    dists &lt;- abs(rep(x[i,2],n) - x[,2])\n    dmax &lt;- sort(dists)[k]\n  \n    \n    for(j in 1:n){\n      if((abs(x[j,2] - x[i,2]) &gt; dmax)){\n        w[j] &lt;- 0\n      }\n      else{\n        w[j] &lt;- (1 - (abs(x[j,2]-x[i,2])/dmax)**3)**3\n      }\n    }\n  \n  \n   W &lt;- diag(x = w, nrow = n, ncol = n)\n   Beta &lt;- solve(t(x)%*%W%*%x)%*%t(x)%*%W%*%y\n   yhat[i] &lt;- Beta[1] + Beta[2]*x[i,2]\n  }\n  return(yhat)\n}\n\nround(custom_lowess(X,Y,0.5),5) == round(lowess(X,Y,f = 0.5, iter = 0)$y, 5)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "Lowess.html",
    "href": "Lowess.html",
    "title": "Lowess",
    "section": "",
    "text": "set.seed(1)\n\nX &lt;- seq(1,100)\ne &lt;- rnorm(100, 0, (0.2)**2)\nY &lt;- sin(X/10) + e\n\ncustom_lowess &lt;- function(x,y,f){\n  \n  n &lt;- length(y)\n  x &lt;- matrix(data = cbind(rep(1,n), x), nrow = n , ncol = 2)\n  k &lt;- floor(f*n)\n  w &lt;- rep(NA, n)\n  yhat &lt;- rep(NA,n)\n  \n  for(i in 1:n)\n    {\n    dists &lt;- abs(rep(x[i,2],n) - x[,2])\n    dmax &lt;- sort(dists)[k]\n  \n    \n    for(j in 1:n){\n      if((abs(x[j,2] - x[i,2]) &gt; dmax)){\n        w[j] &lt;- 0\n      }\n      else{\n        w[j] &lt;- (1 - (abs(x[j,2]-x[i,2])/dmax)**3)**3\n      }\n    }\n  \n  \n   W &lt;- diag(x = w, nrow = n, ncol = n)\n   Beta &lt;- solve(t(x)%*%W%*%x)%*%t(x)%*%W%*%y\n   yhat[i] &lt;- Beta[1] + Beta[2]*x[i,2]\n  }\n  return(yhat)\n}\n\nround(custom_lowess(X,Y,0.5),5) == round(lowess(X,Y,f = 0.5, iter = 0)$y, 5)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE"
  },
  {
    "objectID": "index.html#practical-1",
    "href": "index.html#practical-1",
    "title": "Hand-in 1",
    "section": "",
    "text": "This initial analysis in conducted on the airquality dataset, a heading of which is visible below:\n\n\n   Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\nRows with missing values\n\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\nSummary Statistics\n\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\nSimple Linear Regression\nFirst principles\n\nX &lt;-  matrix(data = cbind(rep(1, 50) ,cars$speed), nrow = 50, ncol = 2)\nY &lt;-  cars$dist\n\n\n\n#Function that takes response and predictor data frames, estimates the regression parameters under ordinary least squares estiamtion and outputs the results in a list \nModelMaker &lt;- function(X,Y){\n  \n    #Model coefficient estimates\n    betas = (solve(t(X)%*%X))%*%(t(X)%*%Y)\n    fitted &lt;- X%*%betas #fitted values\n    \n    #Standard errors\n    cov &lt;- solve(t(X)%*%X) #covariance matrix\n    SSE &lt;- sum((Y-fitted)**2) #error sum of squares\n    n &lt;-  length(Y)\n    s &lt;-  sqrt(SSE/(n-2)) #residual standard error\n    se1 &lt;- s*sqrt(cov[1]) #standard errors\n    se2 &lt;- s*sqrt(cov[4])\n    \n    #t-values\n    t1 &lt;- betas[1]/se1\n    t2 &lt;- betas[2]/se2\n    \n    #p-values\n    p1 &lt;- 2*pt(q = t1, df = n-2, lower.tail = TRUE)\n    p2 &lt;- 2*pt(q = t2, df = n-2, lower.tail = FALSE)\n    \n    return(list(coefficients = round(betas,4), Std.Error = c(round(se1,4),round(se2,4)),     tvalue = c(round(t1,4),round(t2,4)), p = c(round(p1,4),round(p2,4))))\n\n}\n\nModelMaker(X,Y)\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\nThe estimates found via first principles are -17.57905 for the intercept coefficient and 3.932409 for the slope coefficient.\nUsing the lm package, the generated model is:\n\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\nWe will now test to see if the lm function agrees with our first principal results\n\n#Model coefficient differences\nround(summary(mod)[[\"coefficients\"]][, \"Estimate\"],4) == ModelMaker(X,Y)$coefficients\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\nround(summary(mod)[[\"coefficients\"]][, \"Std. Error\"],4) == ModelMaker(X,Y)$Std.Error\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"t value\"],4) == ModelMaker(X,Y)$tvalue\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"Pr(&gt;|t|)\"],4) == ModelMaker(X,Y)$p\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\nSince the differences between the appropriate estimates are negligible, we conclude that thge lm model agrees with the first principal calculations."
  }
]