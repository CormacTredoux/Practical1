[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home Page",
    "section": "",
    "text": "This project consists of three practicals namely, Practical 1, Lowess and prac-day-four.\nEach of the practicals are available via the tabs on the left.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Home Page</span>"
    ]
  },
  {
    "objectID": "Practical1.html",
    "href": "Practical1.html",
    "title": "2  Practical1",
    "section": "",
    "text": "This initial analysis in conducted on the airquality dataset, a heading of which is visible below:\n\n#|echo: false\n#|\nlibrary(tibble)\n\ndata(airquality)\nhead(airquality, 10)\n\n   Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\n\n3 Question 1\nRows with missing values\n\n#|echo:  false\n#|\nrows &lt;- sort(union(which(is.na(airquality[, 1])), which(is.na(airquality[, 2]))))\nrows\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\n\n\n4 Question 2\nSummary Statistics\n\n#|echo:  false\n\n#Tempurature summary statistics\nmean_Temp = mean(airquality$Temp)\nmin_Temp = min(airquality$Temp)\nmax_Temp = max(airquality$Temp)\nsd_Temp = sd(airquality$Temp)\n\nairquality &lt;- na.omit(airquality)\n\n#Ozone Summary statistics\nmean_Oz = mean(airquality$Ozone)\nmin_Oz = min(airquality$Ozone)\nmax_Oz = max(airquality$Ozone)\nsd_Oz = sd(airquality$Ozone)\n\n\ndf &lt;- data.frame(\n  Stats = c(\"Min\", \"Mean\", \"Sd\", \"Max\"),\n  Tempurature = c(min_Temp, mean_Temp, sd_Temp, max_Temp),\n  Ozone = c(min_Oz, mean_Oz, sd_Oz, max_Oz)\n)\ndf\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\n\n\n5 Question 3\nSimple Linear Regression\n\n#|echo :  false\n#|message :  false\nattach(cars)\n\nFirst principles\n\nX &lt;-  matrix(data = cbind(rep(1, 50) , cars$speed),\n             nrow = 50,\n             ncol = 2)\nY &lt;-  cars$dist\n\n\n\n#Function that takes response and predictor data frames, estimates the regression parameters under ordinary least squares estiamtion and outputs the results in a list\nModelMaker &lt;- function(X, Y) {\n  #Model coefficient estimates\n  betas = (solve(t(X) %*% X)) %*% (t(X) %*% Y)\n  fitted &lt;- X %*% betas #fitted values\n  \n  #Standard errors\n  cov &lt;- solve(t(X) %*% X) #covariance matrix\n  SSE &lt;- sum((Y - fitted) ** 2) #error sum of squares\n  n &lt;-  length(Y)\n  s &lt;-  sqrt(SSE / (n - 2)) #residual standard error\n  se1 &lt;- s * sqrt(cov[1]) #standard errors\n  se2 &lt;- s * sqrt(cov[4])\n  \n  #t-values\n  t1 &lt;- betas[1] / se1\n  t2 &lt;- betas[2] / se2\n  \n  #p-values\n  p1 &lt;- 2 * pt(q = t1,\n               df = n - 2,\n               lower.tail = TRUE)\n  p2 &lt;- 2 * pt(q = t2,\n               df = n - 2,\n               lower.tail = FALSE)\n  \n  return(list(\n    coefficients = round(betas, 4),\n    Std.Error = c(round(se1, 4), round(se2, 4)),\n    tvalue = c(round(t1, 4), round(t2, 4)),\n    p = c(round(p1, 4), round(p2, 4))\n  ))\n  \n}\n\nModelMaker(X, Y)\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\nThe estimates found via first principles are -17.57905 for the intercept coefficient and 3.932409 for the slope coefficient.\n\n\n6 Question 4\nUsing the lm package, the generated model is:\n\n#|echo:  false\nX2 &lt;- cars$speed\nmod &lt;- lm(Y ~ X2)\nsummary(mod)\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\nWe will now test to see if the lm function agrees with our first principal results\n\n#Model coefficient differences\nround(summary(mod)[[\"coefficients\"]][, \"Estimate\"], 4) == ModelMaker(X, Y)$coefficients\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\nround(summary(mod)[[\"coefficients\"]][, \"Std. Error\"], 4) == ModelMaker(X, Y)$Std.Error\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"t value\"], 4) == ModelMaker(X, Y)$tvalue\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"Pr(&gt;|t|)\"], 4) == ModelMaker(X, Y)$p\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\nSince the differences between the appropriate estimates are negligible, we conclude that thge lm model agrees with the first principal calculations.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical1</span>"
    ]
  },
  {
    "objectID": "Lowess.html",
    "href": "Lowess.html",
    "title": "3  Lowess",
    "section": "",
    "text": "#Setting seed for reproducibility\nset.seed(1)\n\n#Randomly generating the sequences\nX &lt;- seq(1, 100)\ne &lt;- rnorm(100, 0, (0.2) ** 2)\nY &lt;- sin(X / 10) + e\n\ncustom_lowess &lt;- function(x, y, f) {\n  n &lt;- length(y)\n  \n  #Binding the predictor matrix with a column of ones to generate the intercept coefficient estimate\n  x &lt;- matrix(data = cbind(rep(1, n), x),\n              nrow = n ,\n              ncol = 2)\n  #Deriving k\n  k &lt;- floor(f * n)\n  \n  #Creating space for the weights and the fitted values\n  w &lt;- rep(NA, n)\n  yhat &lt;- rep(NA, n)\n  \n  for (i in 1:n)\n  {\n    #Computing the distances\n    dists &lt;- abs(rep(x[i, 2], n) - x[, 2])\n    \n    #Max distance\n    dmax &lt;- sort(dists)[k]\n    \n    \n    #Assigning weights to each neighbour\n    for (j in 1:n) {\n      if ((abs(x[j, 2] - x[i, 2]) &gt; dmax)) {\n        w[j] &lt;- 0\n      }\n      else{\n        w[j] &lt;- (1 - (abs(x[j, 2] - x[i, 2]) / dmax) ** 3) ** 3\n      }\n    }\n    \n    #Creating a diagonal matrix from the weights \n    W &lt;- diag(x = w, nrow = n, ncol = n)\n    \n    #Computing the beta coefficient estimates\n    Beta &lt;- solve(t(x) %*% W %*% x) %*% t(x) %*% W %*% y\n    \n    #Computing fitted values\n    yhat[i] &lt;- Beta[1] + Beta[2] * x[i, 2]\n  }\n  return(yhat)\n}\n\nLet’s now check that this returns the same values as the lowess function\n\nround(custom_lowess(X, Y, 0.5), 5) == round(lowess(X, Y, f = 0.5, iter = 0)$y, 5)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\n\nClearly all the values are equivalent to that of the lowess function.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lowess</span>"
    ]
  },
  {
    "objectID": "prac-day-four.html",
    "href": "prac-day-four.html",
    "title": "4  prac_day_four",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(nycflights13)\nlibrary(UtilsDataRSV)\n\n\n5 Question 1\nBelow a summary of the flights dataset is shown, this is alternative and more concise than simply printing the entire dataset.\n\nview_cols(flights)\n\n[1] \"year\"\n[1] 756\n[1] \"_____________________\"\n[1] \"month\"\n[1]  3  8  1 10  6\n[1] \"_____________________\"\n[1] \"day\"\n[1] 17  7  8 31 13\n[1] \"_____________________\"\n[1] \"dep_time\"\n[1] 1309 1023 1814  101   NA\n[1] \"_____________________\"\n[1] \"sched_dep_time\"\n[1] 1030  715 1816 1617 2054\n[1] \"_____________________\"\n[1] \"dep_delay\"\n[1]  45  52 338 -23  NA\n[1] \"_____________________\"\n[1] \"arr_time\"\n[1] 1734 2329 2237 1919   NA\n[1] \"_____________________\"\n[1] \"sched_arr_time\"\n[1] 2357 1256  245 1746 1742\n[1] \"_____________________\"\n[1] \"arr_delay\"\n[1] 281 -66 199  59  NA\n[1] \"_____________________\"\n[1] \"carrier\"\n [1] \"AS\" \"EV\" \"WN\" \"F9\" \"B6\" \"FL\" \"DL\" \"AA\" \"YV\" \"9E\" \"OO\" \"HA\" \"VX\" \"US\" \"UA\"\n[16] \"MQ\"\n[1] \"_____________________\"\n[1] \"flight\"\n[1] 2422 2152 1813 4141 1226\n[1] \"_____________________\"\n[1] \"tailnum\"\n [1] \"N826AW\" \"N665UA\" \"N5FEAA\" \"N13161\" \"N977AT\" \"N798SW\" \"N558AS\" \"N962DN\"\n [9] \"N382SW\" \"N564JB\" \"N3BBAA\" \"N753US\" \"N765US\" \"N508JB\" \"N8943A\" \"N562AS\"\n[17] \"N624AG\" \"N640MQ\" \"N391HA\" NA      \n[1] \"4024 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"origin\"\n[1] \"EWR\" \"JFK\" \"LGA\"\n[1] \"_____________________\"\n[1] \"dest\"\n [1] \"OAK\" \"LAX\" \"BUR\" \"JAX\" \"LGA\" \"CHO\" \"MSP\" \"CRW\" \"ROC\" \"HOU\" \"PHL\" \"EYW\"\n[13] \"SDF\" \"MHT\" \"PHX\" \"EGE\" \"BUF\" \"SRQ\" \"MSN\" \"FLL\"\n[1] \"85 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"air_time\"\n[1]  70 190 592 565  NA\n[1] \"_____________________\"\n[1] \"distance\"\n[1]  617 1969 2465  292 1325\n[1] \"_____________________\"\n[1] \"hour\"\n[1] 19 18 11 14  1\n[1] \"_____________________\"\n[1] \"minute\"\n[1]  0 41 23 47 17\n[1] \"_____________________\"\n[1] \"time_hour\"\n [1] \"2013-07-25 20:00:00 EDT\" \"2013-12-26 15:00:00 EST\"\n [3] \"2013-08-05 08:00:00 EDT\" \"2013-04-22 10:00:00 EDT\"\n [5] \"2013-12-01 07:00:00 EST\" \"2013-01-04 20:00:00 EST\"\n [7] \"2013-11-29 11:00:00 EST\" \"2013-10-03 13:00:00 EDT\"\n [9] \"2013-12-01 16:00:00 EST\" \"2013-05-23 08:00:00 EDT\"\n[11] \"2013-08-22 18:00:00 EDT\" \"2013-12-19 09:00:00 EST\"\n[13] \"2013-12-29 06:00:00 EST\" \"2013-07-03 21:00:00 EDT\"\n[15] \"2013-11-12 23:00:00 EST\" \"2013-06-27 16:00:00 EDT\"\n[17] \"2013-02-27 18:00:00 EST\" \"2013-05-07 05:00:00 EDT\"\n[19] \"2013-08-22 06:00:00 EDT\" \"2013-10-29 13:00:00 EDT\"\n[1] \"6916 unique entries not displayed\"\n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: tailnum,\ndest, time_hour\n\n\n\n\n6 Question 2\nBelow the required code is rewritten using dplyr and the pipe operator\n\nflight1 &lt;- flights |&gt; \n  filter(month == 1)\n\ncarrier_vec &lt;- flight1 |&gt; \n  distinct(carrier)\n\n\ncarrier_dist_vec_mean &lt;- flight1 |&gt; \n  group_by(carrier) |&gt; \n  summarise(mean_distance = mean(distance, na.rm = TRUE)) \n\n\ncarrier_dist_vec_sd &lt;- flight1 |&gt; \n  group_by(carrier) |&gt; \n  summarise(sd_distance = sd(distance, na.rm = TRUE))\n\n\ndist_tbl &lt;- inner_join(carrier_dist_vec_mean, carrier_dist_vec_sd)\n\nJoining with `by = join_by(carrier)`\n\ndist_tbl |&gt; arrange(mean_distance)\n\n# A tibble: 16 × 3\n   carrier mean_distance sd_distance\n   &lt;chr&gt;           &lt;dbl&gt;       &lt;dbl&gt;\n 1 YV               229          0  \n 2 9E               476.       334. \n 3 EV               522.       294. \n 4 US               536.       553. \n 5 MQ               566.       223. \n 6 FL               691.       142. \n 7 OO               733         NA  \n 8 WN               942.       496. \n 9 B6              1062.       681. \n10 DL              1220.       644. \n11 AA              1350.       626. \n12 UA              1462.       778. \n13 F9              1620          0  \n14 AS              2402          0  \n15 VX              2495.        98.2\n16 HA              4983          0  \n\n\n\n\n7 Question 3\nThe code below counts the number of flights undertaken by the “OO” in month 1; only one flight was undertaken. Since the sample standard deviation is undefined for a sample size of 1 (due to division by 0), the standard deviation is listed as NA.\n\nflight1 |&gt; \n  filter(,carrier == \"OO\") |&gt; \n  summarise(count = n())\n\n# A tibble: 1 × 1\n  count\n  &lt;int&gt;\n1     1\n\n\nThe following code demonstrates that for carriers with distance standard deviation of 0 have only one distinct distance. This means that the carrier covers the same distance for every flight and hence their mean distance is equal to the distance traveled every flight. There are thus no deviations from the mean and hence no standard deviation.\n\ndist_tbl |&gt; \n  filter(sd_distance == 0) |&gt; \n  inner_join(flight1) |&gt; \n  group_by(carrier) |&gt; \n  summarise(distinct_vals = n_distinct(distance, na.rm = TRUE))\n\nJoining with `by = join_by(carrier)`\n\n\n# A tibble: 4 × 2\n  carrier distinct_vals\n  &lt;chr&gt;           &lt;int&gt;\n1 AS                  1\n2 F9                  1\n3 HA                  1\n4 YV                  1\n\n\n\n\n8 Question 4\n\nflights |&gt; \n  group_by(carrier, month) |&gt; \n  summarise(avg = mean(dep_delay, na.rm = TRUE)) |&gt; \n    pivot_wider(id_cols = \"month\", \n                names_from = carrier,\n                values_from = avg)\n\n`summarise()` has grouped output by 'carrier'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 12 × 17\n   month  `9E`    AA     AS    B6    DL    EV    F9    FL    HA    MQ    OO\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 16.9   6.93  7.35   9.49  3.85 24.2  10     1.97 54.4   6.49 67   \n 2     2 16.5   8.28  0.722 13.8   5.54 21.5  29.8   5.18 17.4   8.09 NA   \n 3     3 13.4   8.70  8.42  14.2   9.93 26.2  16.8  17.3   1.16  7.19 NA   \n 4     4 13.6  11.7  11.3   15.2   8.17 22.8  24.6  13.1  -2.1  13.7  NA   \n 5     5 22.7   9.66  6.77   9.78  9.74 20.2  35.9  19.2  -1.45 13.9  NA   \n 6     6 29.0  14.6  13.1   20.4  18.7  25.5  29.4  38.8   1.47 20.8  61   \n 7     7 31.4  12.1   2.42  24.9  20.6  26.5  31.8  41.2  -1.71 20.7  NA   \n 8     8 17.3   7.17  2.87  15.7   9.85 16.3  22.2  23.4   1.68 10.1  64   \n 9     9  7.75  5.69 -4.52   6.63  5.53  8.24  8.26 16.9  -5.44  5.35 -4.94\n10    10  9.33  3.00  0.677  2.96  3.42 13.4   9.70 13.7  -5.10  4.48 NA   \n11    11  7.56  3.10  3.08   3.52  2.85  9.83 13.5  16.9  -5.44  3.28  0.8 \n12    12 19.8  11.7  18.0   17.0  10.8  27.9  13.1  26.1  -3.14 12.7  NA   \n# ℹ 5 more variables: UA &lt;dbl&gt;, US &lt;dbl&gt;, VX &lt;dbl&gt;, WN &lt;dbl&gt;, YV &lt;dbl&gt;\n\n\n\n\n9 Question 5\n\ndelayed_timely &lt;- flights |&gt; \n  filter(dep_delay &gt; 0, arr_delay &lt;= 0) |&gt; \n  summarise(delayed_timely = n()) \n\ntotal &lt;- flights |&gt; \n  summarise(total = n())\n\ntibble(delayed_timely, total, proportion = delayed_timely/total)\n\n# A tibble: 1 × 3\n  delayed_timely  total proportion\n           &lt;int&gt;  &lt;int&gt;      &lt;dbl&gt;\n1          35442 336776      0.105\n\n\n\n\n10 Question 6\nBelow are the routes that more than one airline flies\n\n#Routes that more than one airline flies\n\nmult_routes &lt;- flights |&gt; \n  mutate(route = paste(origin, dest)) |&gt; \n  group_by(route) |&gt; \n  summarise(count = n_distinct(carrier)) |&gt; \n  filter(count &gt; 1)\n\nmult_routes\n\n# A tibble: 128 × 2\n   route   count\n   &lt;chr&gt;   &lt;int&gt;\n 1 EWR ATL     4\n 2 EWR AUS     2\n 3 EWR BDL     2\n 4 EWR BNA     2\n 5 EWR BOS     3\n 6 EWR BWI     2\n 7 EWR CHS     2\n 8 EWR CLE     2\n 9 EWR CLT     3\n10 EWR CVG     2\n# ℹ 118 more rows\n\n\nBelow are the delays for each airline on each such route\n\n#Delays for each airline on each such route\n\ndelay.route.airline &lt;-  flights |&gt; \n  mutate(route = paste(origin, dest)) |&gt; \n  inner_join(mult_routes) |&gt; \n  select(carrier, route, arr_delay) |&gt; \n  left_join(airlines) |&gt; \n  group_by(route, name) |&gt; \n  summarise(Average_delay = mean(arr_delay, na.rm = TRUE)) \n\nJoining with `by = join_by(route)`\nJoining with `by = join_by(carrier)`\n`summarise()` has grouped output by 'route'. You can override using the\n`.groups` argument.\n\ndelay.route.airline\n\n# A tibble: 343 × 3\n# Groups:   route [128]\n   route   name                     Average_delay\n   &lt;chr&gt;   &lt;chr&gt;                            &lt;dbl&gt;\n 1 EWR ATL Delta Air Lines Inc.             10.0 \n 2 EWR ATL Endeavor Air Inc.                -6.25\n 3 EWR ATL ExpressJet Airlines Inc.         19.5 \n 4 EWR ATL United Air Lines Inc.            10.5 \n 5 EWR AUS Southwest Airlines Co.          -11.2 \n 6 EWR AUS United Air Lines Inc.             4.28\n 7 EWR BDL ExpressJet Airlines Inc.          6.78\n 8 EWR BDL United Air Lines Inc.            22.6 \n 9 EWR BNA ExpressJet Airlines Inc.         17.7 \n10 EWR BNA Southwest Airlines Co.           -2.13\n# ℹ 333 more rows\n\n\nBelow are calculations of the best and worst airlines in terms of average arrival delay for the aforementioned routes.\n\n#Calculating best and worst arrival delays\nbest &lt;- delay.route.airline |&gt; \n  group_by(route) |&gt; \n  summarise(Average_delay = min(Average_delay, na.rm = TRUE)) |&gt; \n  left_join(delay.route.airline) |&gt; \n  rename(Best = Average_delay)\n\nJoining with `by = join_by(route, Average_delay)`\n\nworst &lt;- delay.route.airline |&gt; \n  group_by(route) |&gt; \n  summarise(Average_delay = max(Average_delay, na.rm = TRUE)) |&gt; \n  left_join(delay.route.airline) |&gt; \n  rename(Worst = Average_delay)\n\nJoining with `by = join_by(route, Average_delay)`\n\ntbl &lt;- best |&gt; \n  inner_join(worst, by = \"route\")\ntbl\n\n# A tibble: 128 × 5\n   route      Best name.x                   Worst name.y                  \n   &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                    &lt;dbl&gt; &lt;chr&gt;                   \n 1 EWR ATL  -6.25  Endeavor Air Inc.        19.5  ExpressJet Airlines Inc.\n 2 EWR AUS -11.2   Southwest Airlines Co.    4.28 United Air Lines Inc.   \n 3 EWR BDL   6.78  ExpressJet Airlines Inc. 22.6  United Air Lines Inc.   \n 4 EWR BNA  -2.13  Southwest Airlines Co.   17.7  ExpressJet Airlines Inc.\n 5 EWR BOS  -4.01  ExpressJet Airlines Inc.  6.87 JetBlue Airways         \n 6 EWR BWI   5.95  Southwest Airlines Co.   20.1  ExpressJet Airlines Inc.\n 7 EWR CHS -14     United Air Lines Inc.    16.2  ExpressJet Airlines Inc.\n 8 EWR CLE  -3.71  ExpressJet Airlines Inc.  5.97 United Air Lines Inc.   \n 9 EWR CLT   0.920 US Airways Inc.          20.5  ExpressJet Airlines Inc.\n10 EWR CVG   1.40  Endeavor Air Inc.        21.2  ExpressJet Airlines Inc.\n# ℹ 118 more rows\n\n\nClearly the airline with the worst delay is ExpressJet Airlines Inc. and the best is Endeavor Air Inc.\n\ntbl |&gt; \n  mutate(diff = Worst - Best) |&gt; \n  arrange(-diff) |&gt; \n  select(route, diff)\n\n# A tibble: 128 × 2\n   route    diff\n   &lt;chr&gt;   &lt;dbl&gt;\n 1 JFK ATL 127. \n 2 LGA XNA 112. \n 3 LGA ORD 108. \n 4 LGA MSY 102. \n 5 EWR STL  96.4\n 6 LGA MSP  95.7\n 7 EWR DTW  67.5\n 8 LGA ATL  56.7\n 9 LGA PBI  53.3\n10 LGA IND  47.2\n# ℹ 118 more rows\n\n\nClearly the route with greatest difference between the best and worst performing airline is JFK ATL.\n\ntbl |&gt; \n  filter(route == \"JFK ATL\")\n\n# A tibble: 1 × 5\n  route    Best name.x            Worst name.y                  \n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;                   \n1 JFK ATL  1.40 Endeavor Air Inc.   128 ExpressJet Airlines Inc.\n\nflights |&gt; \n  inner_join(airlines) |&gt; \n  filter(name == \"Endeavor Air Inc.\") |&gt; \n  mutate(route = paste(origin, dest))\n\nJoining with `by = join_by(carrier)`\n\n\n# A tibble: 18,460 × 21\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      810            810         0     1048           1037\n 2  2013     1     1     1451           1500        -9     1634           1636\n 3  2013     1     1     1452           1455        -3     1637           1639\n 4  2013     1     1     1454           1500        -6     1635           1636\n 5  2013     1     1     1507           1515        -8     1651           1656\n 6  2013     1     1     1530           1530         0     1650           1655\n 7  2013     1     1     1546           1540         6     1753           1748\n 8  2013     1     1     1550           1550         0     1844           1831\n 9  2013     1     1     1552           1600        -8     1749           1757\n10  2013     1     1     1554           1600        -6     1701           1734\n# ℹ 18,450 more rows\n# ℹ 13 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, name &lt;chr&gt;, route &lt;chr&gt;\n\nflights |&gt; \n  inner_join(airlines) |&gt; \n  filter(name == \"ExpressJet Airlines Inc.\") |&gt; \n  mutate(route = paste(origin, dest)) \n\nJoining with `by = join_by(carrier)`\n\n\n# A tibble: 54,173 × 21\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      557            600        -3      709            723\n 2  2013     1     1      624            630        -6      909            840\n 3  2013     1     1      632            608        24      740            728\n 4  2013     1     1      809            815        -6     1043           1050\n 5  2013     1     1      811            815        -4     1006           1032\n 6  2013     1     1      812            814        -2     1040           1017\n 7  2013     1     1      822            830        -8     1014           1016\n 8  2013     1     1      831            835        -4     1021           1039\n 9  2013     1     1      851            851         0     1032           1036\n10  2013     1     1      929            929         0     1028           1042\n# ℹ 54,163 more rows\n# ℹ 13 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, name &lt;chr&gt;, route &lt;chr&gt;\n\nflights |&gt; \n  arrange(distance)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     7    27       NA            106        NA       NA            245\n 2  2013     1     3     2127           2129        -2     2222           2224\n 3  2013     1     4     1240           1200        40     1333           1306\n 4  2013     1     4     1829           1615       134     1937           1721\n 5  2013     1     4     2128           2129        -1     2218           2224\n 6  2013     1     5     1155           1200        -5     1241           1306\n 7  2013     1     6     2125           2129        -4     2224           2224\n 8  2013     1     7     2124           2129        -5     2212           2224\n 9  2013     1     8     2127           2130        -3     2304           2225\n10  2013     1     9     2126           2129        -3     2217           2224\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n11 Question 7\n\ndata &lt;- structure(list(id = c(\"id_1\", \"id_2\", \"id_3\", \"id_4\", \"id_5\", \n\"id_6\", \"id_7\", \"id_8\", \"id_9\", \"id_10\", \"id_11\", \"id_12\", \"id_13\", \n\"id_14\", \"id_15\", \"id_16\", \"id_17\", \"id_18\", \"id_19\", \"id_20\", \n\"id_21\", \"id_22\", \"id_23\", \"id_24\", \"id_25\", \"id_26\", \"id_27\", \n\"id_28\", \"id_29\", \"id_30\", \"id_31\", \"id_32\", \"id_33\", \"id_34\", \n\"id_35\", \"id_36\", \"id_37\", \"id_38\", \"id_39\", \"id_40\", \"id_41\", \n\"id_42\", \"id_43\", \"id_44\", \"id_45\", \"id_46\", \"id_47\", \"id_48\", \n\"id_49\", \"id_50\"), age = c(50L, 34L, 70L, 33L, 22L, 61L, 69L, \n73L, 62L, 56L, 71L, 33L, 73L, 44L, 45L, 46L, 24L, 70L, 46L, 76L, \n47L, 76L, 28L, 48L, 54L, 27L, 45L, 26L, 61L, 28L, 38L, 55L, 33L, \n36L, 62L, 58L, 72L, 31L, 34L, 51L, 61L, 64L, 26L, 28L, 60L, 29L, \n42L, 46L, 79L, 72L), gender = c(\"male\", \"male\", \"male\", \"female\", \n\"female\", \"male\", \"female\", \"male\", \"male\", \"female\", \"female\", \n\"male\", \"male\", \"female\", \"male\", \"male\", \"male\", \"male\", \"female\", \n\"male\", \"male\", \"male\", \"male\", \"female\", \"femal\", \"male\", \"female\", \n\"female\", \"female\", \"female\", \"male\", \"female\", \"female\", \"female\", \n\"male\", \"male\", \"female\", \"male\", \"female\", \"female\", \"male\", \n\"female\", \"female\", \"male\", \"male\", \"female\", \"male\", \"male\", \n\"male\", \"female\"), height = c(174.4, 197.7, 174.1, 194.5, NA, \n180.4, 170.5, 157.4, 196.8, 165.1, 153, 197.4, 186, 157.1, 177.5, \n197.7, 179.3, 170.2, 182.4, NA, 165.4, 161, 168.5, 199.2, 157.7, \n154.6, 157.1, 184.5, 181, 194.6, 183.6, 186.9, 176.1, 183, 191.1, \n189.3, 199, 172, 165.6, 170.5, 150.5, 159.2, 192.1, 161.6, 162, \n153.8, 162.3, 186.6, 192.4, 174.9), weight = c(69.4, 62.3, 55.6, \n69.5, 78.6, 60.8, 72.2, 60.9, 75.1, 67.7, 82.5, 68.7, 67.8, 76.7, \n87, 61.1, 70.6, 63.3, 81.5, 59.2, 93.2, 87.3, 83.4, 80.9, 68.6, \n76.5, 93.7, 79.1, 92, 65.6, 85.4, 63.3, 79.7, 74.1, 63.3, 78.2, \n95.7, 95.1, 63.7, 66.1, 99.3, 81, 96.9, 73.3, 70.3, 83, 57.6, \n78.6, 61.9, 98.1), blood_type = c(\"O\", \"A\", \"O\", \"O\", \"B\", \"AB\", \n\"O\", \"O\", \"O\", \"AB\", \"A\", \"O\", \"O\", \"O\", \"B\", \"A\", \"B\", \"AB\", \n\"O\", \"AB\", \"A\", \"AB\", \"O\", \"B\", \"A\", \"A\", \"B\", \"AB\", \"A\", \"B\", \n\"B\", \"A\", \"O\", \"O\", \"O\", \"B\", \"O\", \"A\", \"A\", \"B\", \"A\", \"O\", \"AB\", \n\"A\", \"A\", \"O\", \"O\", \"B\", \"A\", \"O\"), disease_status = c(\"diseased\", \n\"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"diseased\", \n\"healthy\", \"diseased\", \"Healthy\", \"diseased\", \"healthy\", \"diseased\", \n\"healthy\", \"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n\"healthy\", \"healthy\", \"diseased\", \"healthy\", \"diseased\", \"healthy\", \n\"healthy\", \"healthy\", \"healthy\", \"diseased\", \"diseased\", \"healthy\", \n\"healthy\", \"healthy\", \"diseased\", \"diseased\", \"diseased\", \"healthy\", \n\"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n\"diseased\", \"diseased\", \"diseased\", \"healthy\", \"healthy\", \"diseased\", \n\"diseased\"), cholesterol = c(228, 223, 213, 198, 166, 151, 195, \n199, 189, 196, 221, 156, 185, 230, 234, 174, 185, 236, 235, 180, \n165, 220, 160, 153, 250, 153, 184, 242, 212, 179, 224, 233, 181, \n199, 220, 214, 214, 248, 191, 162, 203, 173, 199, 187, 248, 189, \n173, 212, 164, 247), glucose = c(96, 78, 101, 119, 103, 91, 86, \nNA, 77, 80, 115, 85, 88, 109, NA, 71, 90, 94, 91, 87, 113, 93, \n97, 118, 109, 80, 85, 119, 99, 108, 89, 108, 97, 116, 79, 84, \n75, 81, 119, NA, 106, 109, 75, 82, 84, 75, 76, 120, 119, 77), \n    smoker = c(\"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\", \n    \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n    \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \n    \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n    \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \n    \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"), exercise = c(\"occasional\", \n    \"regular\", \"occasional\", \"regular\", \"none\", \"occasional\", \n    \"regular\", \"none\", \"occasional\", \"none\", \"occasional\", \"none\", \n    \"none\", \"regular\", \"occasional\", \"none\", \"regular\", \"regular\", \n    \"none\", \"occasional\", \"none\", \"occasional\", \"occasional\", \n    \"occasional\", \"regular\", \"occasional\", \"regular\", \"regular\", \n    \"regular\", \"occasional\", \"occasional\", \"none\", \"none\", \"regular\", \n    \"occasional\", \"occasional\", \"none\", \"none\", \"none\", \"none\", \n    \"occasional\", \"regular\", \"regular\", \"none\", \"regular\", \"occasional\", \n    \"occasional\", \"none\", \"occasional\", \"regular\"), income = c(84820L, \n    81547L, 22588L, 72490L, 74533L, 25338L, 41469L, 57315L, 63629L, \n    88662L, 62615L, 56261L, 58499L, 82232L, 77584L, 77275L, 38468L, \n    54510L, 91326L, 78611L, 31402L, 29586L, 21441L, 58269L, 84173L, \n    88295L, 37940L, 43750L, 69750L, 92356L, 82518L, 91455L, 68866L, \n    51178L, 68275L, 27689L, 35418L, 81318L, 62405L, 86851L, 25654L, \n    47553L, 74474L, 51409L, 22607L, 55360L, 96351L, 21516L, 41927L, \n    55810L), education = c(\"master\", \"bachelor\", \"PhD\", \"master\", \n    \"bachelor\", \"highschool\", \"PhD\", \"highschool\", \"PhD\", \"PhD\", \n    \"bachelor\", \"highschool\", \"master\", \"bachelor\", \"PhD\", \"PhD\", \n    \"PhD\", \"bachelor\", \"master\", \"highschool\", \"PhD\", \"highschool\", \n    \"bachelor\", \"master\", \"highschool\", \"highschool\", \"master\", \n    \"master\", \"bachelor\", \"PhD\", \"highschool\", \"PhD\", \"master\", \n    \"master\", \"master\", \"PhD\", \"highschool\", \"master\", \"master\", \n    \"highschool\", \"bachelor\", \"highschool\", \"bachelor\", \"PhD\", \n    \"bachelor\", \"highschool\", \"master\", \"highschool\", \"bachelor\", \n    \"bachelor\"), region = c(\"North\", \"South\", \"North\", \"West\", \n    \"North\", \"West\", \"South\", \"South\", \"West\", \"South\", \"West\", \n    \"South\", \"West\", \"East\", \"North\", \"West\", \"North\", \"North\", \n    \"West\", \"North\", \"East\", \"West\", \"South\", \"North\", \"North\", \n    \"East\", \"East\", \"North\", \"North\", \"West\", \"South\", \"West\", \n    \"West\", \"East\", \"West\", \"North\", \"West\", \"North\", \"East\", \n    \"North\", \"West\", \"South\", \"South\", \"East\", \"North\", \"West\", \n    \"West\", \"East\", \"North\", \"East\"), marital_status = c(\"divorced\", \n    \"single\", \"divorced\", \"divorced\", \"divorced\", \"divorced\", \n    \"divorced\", \"married\", \"divorced\", \"married\", \"divorced\", \n    \"widowed\", \"married\", \"single\", \"widowed\", \"widowed\", \"single\", \n    \"divorced\", \"widowed\", \"widowed\", \"single\", \"married\", \"single\", \n    \"married\", \"widowed\", \"married\", \"single\", \"single\", \"widowed\", \n    \"married\", \"widowed\", \"divorced\", \"single\", \"married\", \"single\", \n    \"widowed\", \"widowed\", \"married\", \"widowed\", \"divorced\", \"married\", \n    \"married\", \"divorced\", \"single\", \"married\", \"widowed\", \"divorced\", \n    \"divorced\", \"single\", \"divorced\")), row.names = c(NA, -50L\n), class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n\nThe code below generates a report/summary of the columns of the data frame.\n\ndata |&gt; \n  view_cols()\n\n[1] \"id\"\n [1] \"id_36\" \"id_13\" \"id_40\" \"id_17\" \"id_9\"  \"id_11\" \"id_41\" \"id_43\" \"id_15\"\n[10] \"id_4\"  \"id_22\" \"id_32\" \"id_10\" \"id_49\" \"id_25\" \"id_1\"  \"id_38\" \"id_35\"\n[19] \"id_12\" \"id_27\"\n[1] \"30 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"age\"\n[1] 27 51 28 60 73\n[1] \"_____________________\"\n[1] \"gender\"\n[1] \"female\" \"male\"   \"femal\" \n[1] \"_____________________\"\n[1] \"height\"\n[1] 172.0 153.0 159.2 154.6    NA\n[1] \"_____________________\"\n[1] \"weight\"\n[1] 80.9 70.6 98.1 93.7 61.9\n[1] \"_____________________\"\n[1] \"blood_type\"\n[1] \"B\"  \"A\"  \"AB\" \"O\" \n[1] \"_____________________\"\n[1] \"disease_status\"\n[1] \"healthy\"  \"Healthy\"  \"diseased\"\n[1] \"_____________________\"\n[1] \"cholesterol\"\n[1] 223 220 196 191 248\n[1] \"_____________________\"\n[1] \"glucose\"\n[1] 87 99 93 94 NA\n[1] \"_____________________\"\n[1] \"smoker\"\n[1] \"yes\" \"no\" \n[1] \"_____________________\"\n[1] \"exercise\"\n[1] \"occasional\" \"regular\"    \"none\"      \n[1] \"_____________________\"\n[1] \"income\"\n[1] 62615 78611 43750 21516 31402\n[1] \"_____________________\"\n[1] \"education\"\n[1] \"master\"     \"PhD\"        \"bachelor\"   \"highschool\"\n[1] \"_____________________\"\n[1] \"region\"\n[1] \"North\" \"South\" \"East\"  \"West\" \n[1] \"_____________________\"\n[1] \"marital_status\"\n[1] \"divorced\" \"married\"  \"single\"   \"widowed\" \n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: id\n\n\nThe following are evident from the above summary:\nClearly there are 50 unique entries for “id” since 20 are displayed and the remainder are labelled as not being displayed.\nThere is a typo in the “gender” column; female is incorrectly spelled as “femal” in at least one case.\nThere are missing values in the “height” column as is indicated by the “NA”.\nThere is a typo in the “disease_status” column; healthy is capatalised as “Healthy” in at least one case.\nThere are missing values in the “glucose” column as is indicated by the “NA”",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>prac_day_four</span>"
    ]
  }
]