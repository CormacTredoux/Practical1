[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hand-in 1",
    "section": "",
    "text": "1",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Hand-in 1</span>"
    ]
  },
  {
    "objectID": "Practical1.html",
    "href": "Practical1.html",
    "title": "2  Practical1",
    "section": "",
    "text": "This initial analysis in conducted on the airquality dataset, a heading of which is visible below:\n\n\n   Ozone Solar.R Wind Temp Month Day\n1     41     190  7.4   67     5   1\n2     36     118  8.0   72     5   2\n3     12     149 12.6   74     5   3\n4     18     313 11.5   62     5   4\n5     NA      NA 14.3   56     5   5\n6     28      NA 14.9   66     5   6\n7     23     299  8.6   65     5   7\n8     19      99 13.8   59     5   8\n9      8      19 20.1   61     5   9\n10    NA     194  8.6   69     5  10\n\n\nRows with missing values\n\n\n [1]   5   6  10  11  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52\n[20]  53  54  55  56  57  58  59  60  61  65  72  75  83  84  96  97  98 102 103\n[39] 107 115 119 150\n\n\nSummary Statistics\n\n\n  Stats Tempurature     Ozone\n1   Min    56.00000   1.00000\n2  Mean    77.88235  42.09910\n3    Sd     9.46527  33.27597\n4   Max    97.00000 168.00000\n\n\nSimple Linear Regression\nFirst principles\n\nX &lt;-  matrix(data = cbind(rep(1, 50) ,cars$speed), nrow = 50, ncol = 2)\nY &lt;-  cars$dist\n\n\n\n#Function that takes response and predictor data frames, estimates the regression parameters under ordinary least squares estiamtion and outputs the results in a list \nModelMaker &lt;- function(X,Y){\n  \n    #Model coefficient estimates\n    betas = (solve(t(X)%*%X))%*%(t(X)%*%Y)\n    fitted &lt;- X%*%betas #fitted values\n    \n    #Standard errors\n    cov &lt;- solve(t(X)%*%X) #covariance matrix\n    SSE &lt;- sum((Y-fitted)**2) #error sum of squares\n    n &lt;-  length(Y)\n    s &lt;-  sqrt(SSE/(n-2)) #residual standard error\n    se1 &lt;- s*sqrt(cov[1]) #standard errors\n    se2 &lt;- s*sqrt(cov[4])\n    \n    #t-values\n    t1 &lt;- betas[1]/se1\n    t2 &lt;- betas[2]/se2\n    \n    #p-values\n    p1 &lt;- 2*pt(q = t1, df = n-2, lower.tail = TRUE)\n    p2 &lt;- 2*pt(q = t2, df = n-2, lower.tail = FALSE)\n    \n    return(list(coefficients = round(betas,4), Std.Error = c(round(se1,4),round(se2,4)),     tvalue = c(round(t1,4),round(t2,4)), p = c(round(p1,4),round(p2,4))))\n\n}\n\nModelMaker(X,Y)\n\n$coefficients\n         [,1]\n[1,] -17.5791\n[2,]   3.9324\n\n$Std.Error\n[1] 6.7584 0.4155\n\n$tvalue\n[1] -2.6011  9.4640\n\n$p\n[1] 0.0123 0.0000\n\n\nThe estimates found via first principles are -17.57905 for the intercept coefficient and 3.932409 for the slope coefficient.\nUsing the lm package, the generated model is:\n\n\n\nCall:\nlm(formula = Y ~ X2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nX2            3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\nWe will now test to see if the lm function agrees with our first principal results\n\n#Model coefficient differences\nround(summary(mod)[[\"coefficients\"]][, \"Estimate\"],4) == ModelMaker(X,Y)$coefficients\n\n     [,1]\n[1,] TRUE\n[2,] TRUE\n\nround(summary(mod)[[\"coefficients\"]][, \"Std. Error\"],4) == ModelMaker(X,Y)$Std.Error\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"t value\"],4) == ModelMaker(X,Y)$tvalue\n\n(Intercept)          X2 \n       TRUE        TRUE \n\nround(summary(mod)[[\"coefficients\"]][, \"Pr(&gt;|t|)\"],4) == ModelMaker(X,Y)$p\n\n(Intercept)          X2 \n       TRUE        TRUE \n\n\nSince the differences between the appropriate estimates are negligible, we conclude that thge lm model agrees with the first principal calculations.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical1</span>"
    ]
  },
  {
    "objectID": "Lowess.html",
    "href": "Lowess.html",
    "title": "3  Lowess",
    "section": "",
    "text": "set.seed(1)\n\nX &lt;- seq(1,100)\ne &lt;- rnorm(100, 0, (0.2)**2)\nY &lt;- sin(X/10) + e\n\ncustom_lowess &lt;- function(x,y,f){\n  \n  n &lt;- length(y)\n  x &lt;- matrix(data = cbind(rep(1,n), x), nrow = n , ncol = 2)\n  k &lt;- floor(f*n)\n  w &lt;- rep(NA, n)\n  yhat &lt;- rep(NA,n)\n  \n  for(i in 1:n)\n    {\n    dists &lt;- abs(rep(x[i,2],n) - x[,2])\n    dmax &lt;- sort(dists)[k]\n  \n    \n    for(j in 1:n){\n      if((abs(x[j,2] - x[i,2]) &gt; dmax)){\n        w[j] &lt;- 0\n      }\n      else{\n        w[j] &lt;- (1 - (abs(x[j,2]-x[i,2])/dmax)**3)**3\n      }\n    }\n  \n  \n   W &lt;- diag(x = w, nrow = n, ncol = n)\n   Beta &lt;- solve(t(x)%*%W%*%x)%*%t(x)%*%W%*%y\n   yhat[i] &lt;- Beta[1] + Beta[2]*x[i,2]\n  }\n  return(yhat)\n}\n\nround(custom_lowess(X,Y,0.5),5) == round(lowess(X,Y,f = 0.5, iter = 0)$y, 5)\n\n  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lowess</span>"
    ]
  },
  {
    "objectID": "prac-day-four.html",
    "href": "prac-day-four.html",
    "title": "4  prac_day_four",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(nycflights13)\nlibrary(UtilsDataRSV)\n\n\n5 Question 1\n\nview_cols(flights)\n\n[1] \"year\"\n[1] 1387\n[1] \"_____________________\"\n[1] \"month\"\n[1] 4 8 1 6 3\n[1] \"_____________________\"\n[1] \"day\"\n[1] 27  9 11 17 30\n[1] \"_____________________\"\n[1] \"dep_time\"\n[1]  211 1105 1634  948   NA\n[1] \"_____________________\"\n[1] \"sched_dep_time\"\n[1] 1208  848 1920  939 1506\n[1] \"_____________________\"\n[1] \"dep_delay\"\n[1] 503 264 331 593  NA\n[1] \"_____________________\"\n[1] \"arr_time\"\n[1]  914 2315  403 1548   NA\n[1] \"_____________________\"\n[1] \"sched_arr_time\"\n[1] 2116 2317 1807 1401 1328\n[1] \"_____________________\"\n[1] \"arr_delay\"\n[1]  54 215 319 178  NA\n[1] \"_____________________\"\n[1] \"carrier\"\n [1] \"AA\" \"US\" \"OO\" \"B6\" \"9E\" \"EV\" \"WN\" \"F9\" \"HA\" \"MQ\" \"FL\" \"VX\" \"UA\" \"YV\" \"AS\"\n[16] \"DL\"\n[1] \"_____________________\"\n[1] \"flight\"\n[1] 4682 4235 5216 3841 2048\n[1] \"_____________________\"\n[1] \"tailnum\"\n [1] \"N941MQ\" \"N926WN\" \"N355NB\" \"N73259\" \"N523US\" \"N3754A\" \"N578AA\" \"N36472\"\n [9] \"N208WN\" \"N642DL\" \"N960DL\" \"N628MQ\" \"N3ELAA\" \"N69806\" \"N380AA\" \"N14993\"\n[17] \"N417UA\" \"N8477R\" \"N827AS\" NA      \n[1] \"4024 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"origin\"\n[1] \"JFK\" \"LGA\" \"EWR\"\n[1] \"_____________________\"\n[1] \"dest\"\n [1] \"MCO\" \"MCI\" \"IAH\" \"FLL\" \"BDL\" \"EGE\" \"EYW\" \"BTV\" \"MSY\" \"BGR\" \"MKE\" \"RIC\"\n[13] \"DFW\" \"OKC\" \"TYS\" \"OMA\" \"ACK\" \"SAT\" \"SLC\" \"PSP\"\n[1] \"85 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"air_time\"\n[1] 647  73 189 125  NA\n[1] \"_____________________\"\n[1] \"distance\"\n[1] 1725 1148  549 1726 1608\n[1] \"_____________________\"\n[1] \"hour\"\n[1] 21 23 15 19 18\n[1] \"_____________________\"\n[1] \"minute\"\n[1] 57  7 25 38 17\n[1] \"_____________________\"\n[1] \"time_hour\"\n [1] \"2013-11-09 06:00:00 EST\" \"2013-10-22 14:00:00 EDT\"\n [3] \"2013-02-06 22:00:00 EST\" \"2013-05-28 05:00:00 EDT\"\n [5] \"2013-03-05 23:00:00 EST\" \"2013-01-17 23:00:00 EST\"\n [7] \"2013-08-14 17:00:00 EDT\" \"2013-07-18 09:00:00 EDT\"\n [9] \"2013-02-03 12:00:00 EST\" \"2013-09-14 12:00:00 EDT\"\n[11] \"2013-03-22 19:00:00 EDT\" \"2013-10-29 11:00:00 EDT\"\n[13] \"2013-04-02 16:00:00 EDT\" \"2013-10-21 07:00:00 EDT\"\n[15] \"2013-06-11 13:00:00 EDT\" \"2013-09-13 06:00:00 EDT\"\n[17] \"2013-01-30 08:00:00 EST\" \"2013-12-29 22:00:00 EST\"\n[19] \"2013-03-20 16:00:00 EDT\" \"2013-06-26 05:00:00 EDT\"\n[1] \"6916 unique entries not displayed\"\n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: tailnum,\ndest, time_hour\n\n\n\n\n6 Question 2\noriginal\n\nflight1 &lt;- flights[flights$month == 1,]\n\ncarrier_vec &lt;- unique(flight1$carrier)\n\ncarrier_dist_vec_mean &lt;- numeric(length(carrier_vec))\n\ncarrier_dist_vec_sd &lt;- numeric(length(carrier_vec))\n\nfor (i in seq_along(carrier_vec)) {\n  carrier_dist_vec_mean[i] &lt;- mean(\n    flight1$distance[flight1$carrier == carrier_vec[i]]\n   )\n  carrier_dist_vec_sd[i] &lt;- sd(\n    flight1$distance[flight1$carrier == carrier_vec[i]]\n  )\n}\n\ndist_tbl &lt;- tibble(\n  carrier = carrier_vec,\n  mean_distance = carrier_dist_vec_mean,\n  sd_distance = carrier_dist_vec_sd\n)\n\ndist_tbl[order(dist_tbl$mean_distance), ]\n\n# A tibble: 16 × 3\n   carrier mean_distance sd_distance\n   &lt;chr&gt;           &lt;dbl&gt;       &lt;dbl&gt;\n 1 YV               229          0  \n 2 9E               476.       334. \n 3 EV               522.       294. \n 4 US               536.       553. \n 5 MQ               566.       223. \n 6 FL               691.       142. \n 7 OO               733         NA  \n 8 WN               942.       496. \n 9 B6              1062.       681. \n10 DL              1220.       644. \n11 AA              1350.       626. \n12 UA              1462.       778. \n13 F9              1620          0  \n14 AS              2402          0  \n15 VX              2495.        98.2\n16 HA              4983          0  \n\n\nnew\n\nflight1 &lt;- flights |&gt; \n  filter(month == 1)\n\ncarrier_vec &lt;- flight1 |&gt; \n  distinct(carrier)\n\n\ncarrier_dist_vec_mean &lt;- flight1 |&gt; \n  group_by(carrier) |&gt; \n  summarise(mean_distance = mean(distance, na.rm = TRUE)) \n\n\ncarrier_dist_vec_sd &lt;- flight1 |&gt; \n  group_by(carrier) |&gt; \n  summarise(sd_distance = sd(distance, na.rm = TRUE))\n\n\ndist_tbl &lt;- inner_join(carrier_dist_vec_mean, carrier_dist_vec_sd)\n\nJoining with `by = join_by(carrier)`\n\ndist_tbl |&gt; arrange(mean_distance)\n\n# A tibble: 16 × 3\n   carrier mean_distance sd_distance\n   &lt;chr&gt;           &lt;dbl&gt;       &lt;dbl&gt;\n 1 YV               229          0  \n 2 9E               476.       334. \n 3 EV               522.       294. \n 4 US               536.       553. \n 5 MQ               566.       223. \n 6 FL               691.       142. \n 7 OO               733         NA  \n 8 WN               942.       496. \n 9 B6              1062.       681. \n10 DL              1220.       644. \n11 AA              1350.       626. \n12 UA              1462.       778. \n13 F9              1620          0  \n14 AS              2402          0  \n15 VX              2495.        98.2\n16 HA              4983          0  \n\n#only one obs so dist is mean so no deviations\n\n\nflight1 |&gt; filter(carrier == \"YV\") |&gt; select(distance) |&gt; distinct()\n\n# A tibble: 1 × 1\n  distance\n     &lt;dbl&gt;\n1      229\n\n\n\n\n7 Question 3\nThe code below counts the number of flights undertaken by the “OO” in month 1; only one flight was undertaken. Since the sample standard deviation is undefined for a sample size of 1 (due to division by 0), the standard deviation is listed as NA.\n\nflight1 |&gt; \n  filter(,carrier == \"OO\") |&gt; \n  summarise(count = n())\n\n# A tibble: 1 × 1\n  count\n  &lt;int&gt;\n1     1\n\n\nThe following code demonstrates that for carriers with distance standard deviation of 0 have only one distinct distance. This means that the carrier covers the same distance for every flight and hence their mean distance is equal to the distance traveled every flight. There are thus no deviations from the mean and hence no standard deviation.\n\ndist_tbl |&gt; \n  filter(sd_distance == 0) |&gt; \n  inner_join(flight1) |&gt; \n  group_by(carrier) |&gt; \n  summarise(distinct_vals = n_distinct(distance, na.rm = TRUE))\n\nJoining with `by = join_by(carrier)`\n\n\n# A tibble: 4 × 2\n  carrier distinct_vals\n  &lt;chr&gt;           &lt;int&gt;\n1 AS                  1\n2 F9                  1\n3 HA                  1\n4 YV                  1\n\n\n\n\n8 Question 4\n\nflights |&gt; \n  group_by(carrier, month) |&gt; \n  summarise(avg = mean(dep_delay, na.rm = TRUE)) |&gt; \n    pivot_wider(id_cols = \"month\", \n                names_from = carrier,\n                values_from = avg)\n\n`summarise()` has grouped output by 'carrier'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 12 × 17\n   month  `9E`    AA     AS    B6    DL    EV    F9    FL    HA    MQ    OO\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 16.9   6.93  7.35   9.49  3.85 24.2  10     1.97 54.4   6.49 67   \n 2     2 16.5   8.28  0.722 13.8   5.54 21.5  29.8   5.18 17.4   8.09 NA   \n 3     3 13.4   8.70  8.42  14.2   9.93 26.2  16.8  17.3   1.16  7.19 NA   \n 4     4 13.6  11.7  11.3   15.2   8.17 22.8  24.6  13.1  -2.1  13.7  NA   \n 5     5 22.7   9.66  6.77   9.78  9.74 20.2  35.9  19.2  -1.45 13.9  NA   \n 6     6 29.0  14.6  13.1   20.4  18.7  25.5  29.4  38.8   1.47 20.8  61   \n 7     7 31.4  12.1   2.42  24.9  20.6  26.5  31.8  41.2  -1.71 20.7  NA   \n 8     8 17.3   7.17  2.87  15.7   9.85 16.3  22.2  23.4   1.68 10.1  64   \n 9     9  7.75  5.69 -4.52   6.63  5.53  8.24  8.26 16.9  -5.44  5.35 -4.94\n10    10  9.33  3.00  0.677  2.96  3.42 13.4   9.70 13.7  -5.10  4.48 NA   \n11    11  7.56  3.10  3.08   3.52  2.85  9.83 13.5  16.9  -5.44  3.28  0.8 \n12    12 19.8  11.7  18.0   17.0  10.8  27.9  13.1  26.1  -3.14 12.7  NA   \n# ℹ 5 more variables: UA &lt;dbl&gt;, US &lt;dbl&gt;, VX &lt;dbl&gt;, WN &lt;dbl&gt;, YV &lt;dbl&gt;\n\n\n\n\n9 Question 5\n\ndelayed_timely &lt;- flights |&gt; \n  filter(dep_delay &gt; 0, arr_delay &lt;= 0) |&gt; \n  summarise(delayed_timely = n()) \n\ntotal &lt;- flights |&gt; \n  summarise(total = n())\n\ntibble(delayed_timely, total, proportion = delayed_timely/total)\n\n# A tibble: 1 × 3\n  delayed_timely  total proportion\n           &lt;int&gt;  &lt;int&gt;      &lt;dbl&gt;\n1          35442 336776      0.105\n\n\n\n\n10 Question 6\n\nmult_routes &lt;- flights |&gt; \n  mutate(route = paste(origin, dest)) |&gt; \n  group_by(route) |&gt; \n  summarise(count = n_distinct(carrier)) |&gt; \n  filter(count &gt; 1)\n\nmult_routes\n\n# A tibble: 128 × 2\n   route   count\n   &lt;chr&gt;   &lt;int&gt;\n 1 EWR ATL     4\n 2 EWR AUS     2\n 3 EWR BDL     2\n 4 EWR BNA     2\n 5 EWR BOS     3\n 6 EWR BWI     2\n 7 EWR CHS     2\n 8 EWR CLE     2\n 9 EWR CLT     3\n10 EWR CVG     2\n# ℹ 118 more rows\n\ndelay.route.airline &lt;-  flights |&gt; \n  mutate(route = paste(origin, dest)) |&gt; \n  inner_join(mult_routes) |&gt; \n  select(carrier, route, arr_delay) |&gt; \n  left_join(airlines) |&gt; \n  group_by(route, name) |&gt; \n  summarise(Average_delay = mean(arr_delay, na.rm = TRUE)) \n\nJoining with `by = join_by(route)`\nJoining with `by = join_by(carrier)`\n`summarise()` has grouped output by 'route'. You can override using the\n`.groups` argument.\n\ndelay.route.airline\n\n# A tibble: 343 × 3\n# Groups:   route [128]\n   route   name                     Average_delay\n   &lt;chr&gt;   &lt;chr&gt;                            &lt;dbl&gt;\n 1 EWR ATL Delta Air Lines Inc.             10.0 \n 2 EWR ATL Endeavor Air Inc.                -6.25\n 3 EWR ATL ExpressJet Airlines Inc.         19.5 \n 4 EWR ATL United Air Lines Inc.            10.5 \n 5 EWR AUS Southwest Airlines Co.          -11.2 \n 6 EWR AUS United Air Lines Inc.             4.28\n 7 EWR BDL ExpressJet Airlines Inc.          6.78\n 8 EWR BDL United Air Lines Inc.            22.6 \n 9 EWR BNA ExpressJet Airlines Inc.         17.7 \n10 EWR BNA Southwest Airlines Co.           -2.13\n# ℹ 333 more rows",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>prac_day_four</span>"
    ]
  }
]